---
import { Pill } from '../ui/pill'

interface Props {
	title: string
	description: string
	author?:
		| string
		| {
				name: string
				title?: string
				picture?: string
				link?: string
		  }
	readtime?: number
	contentType: 'resource' | 'blog'
	tags?: string[]
	primaryPillIcon?: any
	secondaryPillIcon?: any
	navigationSection?: {
		title: string
		description: string
		buttonText: string
		buttonHref: string
	}
}

const {
	title,
	description,
	author,
	readtime,
	contentType,
	primaryPillIcon,
	secondaryPillIcon,
	navigationSection,
} = Astro.props

// Author can be a string or an object with name, title, picture, and link
const authorData =
	typeof author === 'string' ? { name: author, title: null, picture: null, link: null } : author

// Default labels based on content type
const contentTypeLabel = contentType === 'resource' ? 'Recurso' : 'Artículo'

// Default navigation section
const defaultNavigationSection =
	contentType === 'resource'
		? {
				title: '¿Te resultó útil este recurso?',
				description: 'Explora más recursos y guías en nuestra sección de ayuda.',
				buttonText: 'Ver Todos los Recursos',
				buttonHref: '/resources',
			}
		: {
				title: '¿Te gustó este artículo?',
				description: 'Descubre más artículos y contenido en nuestro blog.',
				buttonText: 'Ver Todos los Artículos',
				buttonHref: '/blog',
			}

const finalNavigationSection = navigationSection || defaultNavigationSection
---

<div class="mx-auto flex w-full max-w-4xl flex-col gap-4 px-4 py-8 sm:px-6">
	<!-- Header Section -->
	<a
		class="inline-flex items-center gap-2 text-blue-600 transition-colors hover:text-blue-800 hover:underline"
		href={`/${contentType}s`}
	>
		← Ver más {contentTypeLabel}s
	</a>
	<section class="border-border rounded-md border px-4 py-6 sm:px-6 sm:py-8">
		<div>
			<h1 class="pb-4 text-2xl font-bold break-words sm:text-3xl">{title}</h1>
			<p class="max-w-full text-sm break-words opacity-60 sm:max-w-[80%]">
				{description}
			</p>
			{
				authorData && (
					<div class="mt-4 flex items-center gap-3 overflow-hidden">
						<div class="flex min-w-0 flex-1 items-center gap-3">
							{authorData.picture ? (
								<a
									href={authorData.link || '#'}
									target={authorData.link ? '_blank' : undefined}
									rel={authorData.link ? 'noopener noreferrer' : undefined}
									class="block"
								>
									<img
										src={authorData.picture}
										alt={`Foto de ${authorData.name}`}
										class="border-border hover:border-blue h-10 w-10 rounded-full border-2 object-cover transition-colors"
									/>
								</a>
							) : (
								<div class="bg-muted border-border flex h-10 w-10 items-center justify-center rounded-full border-2">
									<span class="text-muted-foreground text-sm font-medium">
										{authorData.name?.charAt(0).toUpperCase()}
									</span>
								</div>
							)}
							<div class="flex min-w-0 flex-col">
								<div class="text-muted-foreground truncate text-sm">
									Por{' '}
									{authorData.link ? (
										<a
											href={authorData.link}
											target="_blank"
											rel="noopener noreferrer"
											class="text-foreground hover:text-blue font-medium transition-colors"
										>
											{authorData.name}
										</a>
									) : (
										<span class="text-foreground font-medium">{authorData.name}</span>
									)}
								</div>{' '}
								{authorData.title && (
									<div class="text-muted-foreground truncate text-xs">{authorData.title}</div>
								)}
							</div>
						</div>
					</div>
				)
			}
		</div>
		<div class="mt-6 flex flex-wrap items-center gap-2 sm:mt-8">
			<Pill variant="blue" size="sm" icon={primaryPillIcon} className="">
				{contentTypeLabel}
			</Pill>
			{
				readtime && (
					<Pill variant="green" size="sm" icon={secondaryPillIcon} className="">
						{readtime} Minutos de lectura
					</Pill>
				)
			}
			{
				Astro.props.tags &&
					Astro.props.tags.length > 0 &&
					Astro.props.tags.map((tag) => (
						<Pill variant="ghost_red" size="sm" className="">
							{tag}
						</Pill>
					))
			}
		</div>
	</section>
	<!-- Content Section -->
	<article class="border-border min-w-0 overflow-hidden rounded-md border">
		<div class="px-4 py-6 sm:px-6 sm:py-8">
			<div
				class="text-foreground content-markdown max-w-none overflow-hidden leading-relaxed break-words"
			>
				<slot />
			</div>
		</div>
	</article>
	<!-- Navigation Section -->
	<section class="mt-6">
		<div class="border-border rounded-md border p-4 sm:p-6">
			<div class="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
				<div class="min-w-0 flex-1">
					<h3 class="text-foreground mb-2 text-lg font-semibold break-words">
						{finalNavigationSection.title}
					</h3>
					<p class="text-muted-foreground text-sm break-words">
						{finalNavigationSection.description}
					</p>
				</div>
				<div class="flex flex-shrink-0 gap-3">
					<a
						href={finalNavigationSection.buttonHref}
						class="border-border bg-background hover:bg-muted text-foreground inline-flex items-center rounded-md border px-4 py-2 text-sm font-medium whitespace-nowrap transition-colors"
					>
						{finalNavigationSection.buttonText}
					</a>
				</div>
			</div>
		</div>
	</section>
</div>
