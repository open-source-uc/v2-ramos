---
import type { Blogs, Recommendations, Organization } from '@/types'
import { Pill } from '../ui/pill'

interface Props {
	contentData: Blogs | Recommendations
	organizationData: Organization
	contentType: 'resource' | 'blog' | 'recommendation'
	primaryPillIcon?: any
	secondaryPillIcon?: any
	navigationSection?: {
		title: string
		description: string
		buttonText: string
		buttonHref: string
	}
}
const {
	contentData,
	organizationData,
	contentType,
	primaryPillIcon,
	secondaryPillIcon,
	navigationSection,
} = Astro.props

const isRecommendation = contentType === 'recommendation'
const isBlog = contentType === 'blog'
const isResource = contentType === 'resource'

// Etiquetas y campos según tipo
const contentTypeLabel = isResource ? 'Recurso' : isBlog ? 'Blog' : 'Recomendación'

const tags =
	isBlog || isResource
		? (contentData as Blogs).tags
			? (contentData as Blogs).tags.split(',').map((tag: string) => tag.trim())
			: []
		: []

// Para recomendaciones, mostrar campos extra
const recommendationFields = isRecommendation
	? {
			faculty: (contentData as Recommendations).faculty,
			code: (contentData as Recommendations).code,
			qualification: (contentData as Recommendations).qualification,
		}
	: null

// Default navigation section
const defaultNavigationSection = isResource
	? {
			title: '¿Te resultó útil este recurso?',
			description: 'Explora más recursos y guías en nuestra sección de ayuda.',
			buttonText: 'Ver Todos los Recursos',
			buttonHref: '/resources',
		}
	: isBlog
		? {
				title: '¿Te gustó este blog?',
				description: 'Descubre más artículos y contenido en nuestro blog.',
				buttonText: 'Ver Todos los Blogs',
				buttonHref: '/blogs',
			}
		: {
				title: '¿Te resultó útil esta recomendación?',
				description: 'Explora más recomendaciones de cursos y experiencias estudiantiles.',
				buttonText: 'Ver Todas las Recomendaciones',
				buttonHref: '/recommendations',
			}

const finalNavigationSection = navigationSection || defaultNavigationSection
---

<div class="mx-auto flex w-full max-w-4xl flex-col gap-4 px-4 py-8 sm:px-6">
	<!-- Header Section -->
	<a
		class="inline-flex items-center gap-2 text-blue-600 transition-colors hover:text-blue-800 hover:underline"
		href={isRecommendation ? '/recommendations' : `/${contentType}s`}
	>
		← Ver más {contentTypeLabel}s
	</a>
	<!-- Encabezado: título y metadatos -->
	<header class="border-border mb-4 rounded-md border px-4 py-6 sm:px-6 sm:py-8">
		<div class="flex items-center justify-between gap-4">
			<h1 class="pb-4 text-2xl font-bold break-words sm:text-3xl">
				{contentData.title}
			</h1>
		</div>
		<div class="mt-2 flex items-center gap-3 overflow-hidden">
			<a
				href={`/${organizationData.page_link}` || '#'}
				target="_blank"
				rel="noopener noreferrer"
				class="block"
			>
				<img
					src={organizationData.logo_url}
					alt={`Logo de ${organizationData.organization_name}`}
					class="border-border hover:border-blue h-10 w-10 rounded-full border-2 object-cover transition-colors"
				/>
			</a>
			<div class="flex min-w-0 flex-col">
				<div class="text-muted-foreground truncate text-sm">
					Por
					<a
						href={`/${organizationData.page_link}`}
						target="_blank"
						rel="noopener noreferrer"
						class="text-foreground hover:text-blue font-medium transition-colors"
					>
						{organizationData.organization_name}
					</a>
				</div>
				<div class="text-muted-foreground mt-1 flex flex-wrap gap-2 text-xs">
					<span>Autor: <span class="text-foreground">{contentData.user_name}</span></span>
					{
						isBlog && (
							<span>
								Rol: <span class="text-foreground">{(contentData as Blogs).user_role}</span>
							</span>
						)
					}
					{
						isRecommendation && (
							<span>
								Facultad:{' '}
								<span class="text-foreground">{(contentData as Recommendations).faculty}</span>
							</span>
						)
					}
					{
						contentData.period_time && (
							<span>
								Periodo: <span class="text-foreground">{contentData.period_time}</span>
							</span>
						)
					}
					{
						contentData.created_at && (
							<span>
								Creado:{' '}
								<span class="text-foreground">
									{new Date(contentData.created_at).toLocaleDateString()}
								</span>
							</span>
						)
					}
					{
						isRecommendation && (
							<span>
								Código: <span class="text-foreground">{(contentData as Recommendations).code}</span>
							</span>
						)
					}
				</div>
			</div>
		</div>
		<div class="mt-6 flex flex-wrap items-center gap-2 sm:mt-8">
			<Pill variant="blue" size="sm" icon={primaryPillIcon} className="">
				{contentTypeLabel}
			</Pill>
			<Pill variant="green" size="sm" icon={secondaryPillIcon} className="">
				{contentData.readtime} Minutos de lectura
			</Pill>
			{
				isRecommendation && (
					<Pill variant="orange" size="sm" className="">
						Calificación: {(contentData as Recommendations).qualification} / 5
					</Pill>
				)
			}
			{
				tags.map((tag: string) => (
					<Pill variant="ghost_red" size="sm" className="">
						{tag}
					</Pill>
				))
			}
		</div>
	</header>
	<!-- Sección de contenido principal -->
	<article class="border-border min-w-0 overflow-hidden rounded-md border">
		<div class="px-4 py-6 sm:px-6 sm:py-8">
			<div
				class="text-foreground content-markdown max-w-none overflow-hidden leading-relaxed break-words"
			>
				<slot />
			</div>
		</div>
	</article>
	<!-- Sección de navegación -->
	<section class="mt-6">
		<div class="border-border rounded-md border p-4 sm:p-6">
			<div class="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
				<div class="min-w-0 flex-1">
					<h3 class="text-foreground mb-2 text-lg font-semibold break-words">
						{finalNavigationSection.title}
					</h3>
					<p class="text-muted-foreground text-sm break-words">
						{finalNavigationSection.description}
					</p>
				</div>
				<div class="flex flex-shrink-0 gap-3">
					<a
						href={finalNavigationSection.buttonHref}
						class="border-border bg-background hover:bg-muted text-foreground inline-flex items-center rounded-md border px-4 py-2 text-sm font-medium whitespace-nowrap transition-colors"
					>
						{finalNavigationSection.buttonText}
					</a>
				</div>
			</div>
		</div>
	</section>
</div>
