---
import Layout from '@/layouts/Layout.astro'
import ContentHeader from '@/components/features/article/HeaderContent.astro'
import { getToken } from '@/lib/auth'
import config from '@/lib/const'
import { getUserDataByToken } from '@/lib/server/auth'
import { createSlug } from '@/lib/utils'
import type { Blogs, Organization } from '@/types'
import { OsucPermissions } from '@/types/permissions'
import { actions } from 'astro:actions'
import BlogBasicInfo from '@/components/features/article/BlogBasicInfo.astro'
import EditorMDX from '@/components/EditorMDX'

export const prerender = false

// Obtener parámetros de la URL
const blogId = Astro.params.id

const token = getToken(Astro.cookies)
const user = await getUserDataByToken(token)
if (!user) {
  Astro.redirect('/')
}

const blogResponse = await fetch(`${config.BASEURL}/api/articles/blogById?id=${blogId}`)
const blogJson = (await blogResponse.json()) as unknown as Blogs[]
const blogData: Blogs = blogJson[0]
if (!blogData) {
  throw new Error('No se encontró el blog solicitado.')
}

if (
  (user && (String(user.id) !== String(blogData.user_id))) ||
  !user?.permissions?.includes(OsucPermissions.userCanCreateBlogs)
) {
  Astro.redirect(`/blogs/${createSlug(blogData.organization_name)}/${createSlug(blogData.title)}`)
}
let tags: string[] = []
if (blogData.tags) {
  tags = blogData.tags.split(',')
}
let message = ''
let messageType = ''

// Verificar si hay un resultado de la acción
const result = Astro.getActionResult(actions.updateBlog)

if (result && !result.error) {
  message = result.data?.message || 'Blog actualizado exitosamente';
  messageType = 'success';
}
else if (result?.error) {
  message = result.error.message || 'Error al actualizar el blog';
  messageType = 'error';
}

const tagsResponse = await fetch(new URL('/api/articles/blogs-tags', Astro.url.origin))
const tagsData = (await tagsResponse.json()) as { blogTags: string[] }
const mdxContent = await fetch(`${config.BASEURL}/api/articles/article?path=${blogData.content_path}`)
	.then(res => res.text())
	.catch(() => '');
---


<Layout title={`Edita: ${blogData.title}`}> 
	<main class="mx-auto w-full max-w-7xl px-4 py-4 sm:px-6 sm:py-6 lg:px-8 lg:py-8">
	<!-- Estado del formulario -->
	{message && (
		<section
			class={`mb-6 rounded-md border p-4 sm:p-6 ${
				messageType === 'success' ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'
			}`}
			role="alert"
			aria-live="polite"
		>
			<div class="flex items-center gap-2">
				<span
					class={`flex-shrink-0 ${
						messageType === 'success' ? 'text-green-600' : 'text-red-600'
					}`}
				>
					{messageType === 'success' ? '✅' : '❌'}
				</span>
				<p
					class={`text-xs font-medium sm:text-sm ${
						messageType === 'success' ? 'text-green-800' : 'text-red-800'
					}`}
				>
					{message}
				</p>
			</div>
		</section>
	)}
	<div class="mb-6">
		<a href={`/blogs/${createSlug(blogData.organization_name)}/${createSlug(blogData.title)}`} class="text-blue-500 ver:underline"><- Volver al blog</a>
	</div>
		<!-- Header Section -->
		<ContentHeader
			headerTitle="Edita tu blog"
			headerSubtitle="Edita el contenido de tu blog y compártelo con la comunidad"
		/>

		<!-- Formulario Principal -->
		<section aria-labelledby="form-title">
			<article class="border-border min-w-0 rounded-md border">
				<div class="p-4 sm:p-6 lg:p-8">
					<h2 id="form-title" class="mb-4 text-lg font-semibold sm:mb-6 sm:text-xl">
						Información del blog
					</h2>

					<form class="min-w-0 space-y-4 sm:space-y-6" method="POST" action={actions.updateBlog}>
						<!-- Información básica del blog -->
						<BlogBasicInfo user={user} blogTags={tagsData} title={blogData.title} organization_name={blogData.organization_name} period_time={blogData.period_time} readtime={String(blogData.readtime)} tags={tags}/>
						<input type="number" value={blogData.id} name="id" hidden />
						<!-- Separador -->
						<div class="border-border border-t pt-4 sm:pt-6">
							<div class="mb-4 space-y-2">
								<label class="text-foreground block text-sm font-medium">
									Contenido del blog <span class="text-red-500">*</span>
								</label>
								<p class="text-muted-foreground text-xs sm:text-sm">
									Utiliza el editor para crear contenido enriquecido con formato, imágenes y
									componentes especiales.
								</p>
							</div>
						</div>

						<!-- Editor MDX -->
						<div class="min-w-0">
							<EditorMDX initialContent={mdxContent} submitText="Actualizar Blog" client:only="react" />
						</div>
					</form>
				</div>
			</article>
		</section>
	</main>
</Layout>
