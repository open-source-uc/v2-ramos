---
import { getCourseBySigle, getCourseReviews, getCourseReviewByUserIdAndSigle, getPrerequisitesWithNames } from "../../lib/server/courses";
import Layout from "../../layouts/Layout.astro";
import { getUserDataByToken } from "../../lib/server/auth";
import {
    HourglassIcon,
    CalendarIcon,
    LinkIcon,
    BuildingIcon,
    AreaIcon,
    ClockIcon,
    ThumbUpIcon,
    AttendanceIcon,
    WorkloadIcon,
    PlusIcon,
    EditIcon,
    FlagIcon,
    StarIcon,
    ThumbDownIcon,
    ChevronDownIcon,
    CloseIcon,
    CheckIcon,
    LanguageIcon
} from "../../components/icons/icons";
import { Pill } from "../../components/ui/pill";
import { Sentiment } from "../../components/icons/sentiment";
import {
    calculateSentiment,
    calculatePositivePercentage,
    getWorkloadLabel,
    getAttendanceLabel,
    formatWeeklyHours,
    getSentimentLabel,
} from "../../lib/courseStats";
import { Button } from "@/components/ui/button";
import { actions, isInputError } from "astro:actions";
const { sigle } = Astro.params;

if (!sigle) {
    return Astro.redirect("/404");
}

import { getEntry } from "astro:content";
import { MarkdownReviewView } from "@/components/reviews/MarkdownReviewView";
import { SuccessToast } from "@/components/reviews/SuccessToast";
import { ReportToast } from "@/components/reviews/ReportToast";
import { getToken } from "@/lib/auth";
import PrerequisitesSection from "@/components/features/courses/PrerequisitesSection";
import SectionsCollapsible from "@/components/features/courses/SectionsCollapsible";
import CourseCampuses from "@/components/features/courses/CourseCampuses";

import { CURRENT_SEMESTER } from "@/lib/currentSemester"

const courseData = await getEntry("coursesStatic", sigle);
if (!courseData) {
    return Astro.redirect("/404");
}
const course = courseData.data;

const c = await getCourseBySigle(Astro.locals, sigle);
const reviews = await getCourseReviews(Astro.locals, sigle, 10);

// Get prerequisites with names
const prerequisites = await getPrerequisitesWithNames(course.req);

// Calculate statistics
const sentiment = c
    ? calculateSentiment(c.likes, c.superlikes, c.dislikes)
    : "question";
const positivePercentage = c
    ? calculatePositivePercentage(c.likes, c.superlikes, c.dislikes)
    : 0;
const workloadLabel = c
    ? getWorkloadLabel(
          c.votes_low_workload,
          c.votes_medium_workload,
          c.votes_high_workload,
      )
    : "Sin datos";
const attendanceLabel = c
    ? getAttendanceLabel(
          c.votes_mandatory_attendance,
          c.votes_optional_attendance,
          0,
      )
    : "Sin datos";
const weeklyHoursLabel = c
    ? formatWeeklyHours(c.avg_weekly_hours)
    : "Sin datos";
const totalReviews = c ? c.likes + c.superlikes + c.dislikes : 0;

// Check if user has an existing review
const token = getToken(Astro.cookies);

const user = await getUserDataByToken(token);
const userReview = user ? await getCourseReviewByUserIdAndSigle(Astro.locals, sigle, user.id) : null;
const hasExistingReview = userReview && userReview.id !== null;

const reportResult = Astro.getActionResult(actions.reportCourseReview);
const reportSuccessMessage = reportResult?.data?.message;

// Get success message from URL params (from review creation/update)
const successMessage = Astro.url.searchParams.get('success');


---

<Layout>
    <SuccessToast successMessage={successMessage || undefined} client:load />
    <div class="max-w-6xl mx-auto px-4 py-8">
        <!-- Información Fundamental del Curso -->
        <section class="border border-border rounded-md px-6 py-8">
            <p class="text-sm">{course.sigle}</p>

            <div class="pt-2 flex items-center justify-between">
                <h1 class="text-3xl font-bold mb-2 max-w-[75%]">{course.name}</h1>
                <Pill
                    variant="green"
                    size="xl"
                    icon={HourglassIcon}
                    className="hidden desktop:flex text-nowrap"
                >
                    {course.credits} Créditos
                </Pill>
            </div>
            <div>
                <p class="text-sm opacity-60 max-w-[75%]">{course.description}</p>
            </div>
            <div class="flex items-center flex-wrap gap-2 mt-8">
                <CourseCampuses campus={course.campus} lastSemester={course.last_semester} client:load />
                <Pill
                    variant="green"
                    icon={HourglassIcon}
                    className="desktop:hidden"
                >
                    {course.credits} Créditos
                </Pill>
                {
                   course.school &&
                         course.school !== "" && (
                            <Pill variant="orange" icon={BuildingIcon}>
                                <span>{ course.school}</span>
                            </Pill>
                        )
                }
                {
                    course.area &&
                        course.area !== "" && (
                            <Pill variant="pink" icon={AreaIcon}>
                                {course.area}
                            </Pill>
                        )
                }
                {
                    course.is_removable &&
                        course.is_removable.length > 0 && (
                            <Pill 
                                variant={course.is_removable.some(removable => removable) ? "green" : "red"} 
                                icon={course.is_removable.some(removable => removable) ? CheckIcon : CloseIcon}
                            >
                                {course.is_removable.some(removable => removable) ? "Retirable" : "No retirable"}
                            </Pill>
                        )
                }
                {
                    course.is_english &&
                        course.is_english.length > 0 && 
                        course.is_english.some(english => english) && (
                            <Pill variant="purple" icon={LanguageIcon}>
                                Se dicta en Inglés
                            </Pill>
                        )
                }
                
            </div>
        </section>

        <!-- Estadísticas del Curso -->
        <section
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-8"
        >
            <!-- Sentimiento General -->
            <div class="border border-border rounded-md p-6">
                <div class="flex items-center gap-3 mb-3">
                    <Sentiment sentiment={sentiment} size="default" />
                    <div>
                        <h3 class="text-sm font-medium text-muted-foreground">
                            Opinión General
                        </h3>
                        <p class="text-lg font-semibold">
                            {getSentimentLabel(sentiment)}
                        </p>
                    </div>
                </div>
                {
                    totalReviews > 0 && (
                        <div class="text-sm text-muted-foreground">
                            {positivePercentage}% positivas de {totalReviews}{" "}
                            reseñas
                        </div>
                    )
                }
            </div>

            <!-- Nivel de Dificultad -->
            <div class="border border-border rounded-md p-6">
                <div class="flex items-center gap-3 mb-3">
                    <div
                        class="p-2 bg-blue-light text-blue border border-blue/20 rounded-lg"
                    >
                        <WorkloadIcon className="h-5 w-5 fill-current" />
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-muted-foreground">
                             Nivel de Dificultad
                        </h3>
                        <p class="text-lg font-semibold">{workloadLabel}</p>
                    </div>
                </div>
                <div class="text-sm text-muted-foreground">
                    {weeklyHoursLabel} semanales
                </div>
            </div>

            <!-- Asistencia -->
            <div class="border border-border rounded-md p-6">
                <div class="flex items-center gap-3 mb-3">
                    <div
                        class="p-2 bg-purple-light text-purple border border-purple/20 rounded-lg"
                    >
                        <AttendanceIcon className="h-5 w-5 fill-current" />
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-muted-foreground">
                            Asistencia
                        </h3>
                        <p class="text-lg font-semibold">{attendanceLabel}</p>
                    </div>
                </div>
                {
                    c && (
                        <div class="text-sm text-muted-foreground">
                            Basado en{" "}
                            {c.votes_mandatory_attendance +
                                c.votes_optional_attendance}{" "}
                            votos
                        </div>
                    )
                }
            </div>

            <!-- Total de Reseñas -->
            <div class="border border-border rounded-md p-6">
                <div class="flex items-center gap-3 mb-3">
                    <div
                        class="p-2 bg-green-light text-green border border-green/20 rounded-lg"
                    >
                        <ThumbUpIcon className="h-5 w-5 fill-current" />
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-muted-foreground">
                            Total Reseñas
                        </h3>
                        <p class="text-lg font-semibold">{totalReviews}</p>
                    </div>
                </div>
                {
                    c && (
                        <div class="flex gap-2 text-sm">
                            <span class="text-green-600">
                                {c.likes + c.superlikes} ↑
                            </span>
                            <span class="text-red-600">{c.dislikes} ↓</span>
                        </div>
                    )
                }
            </div>
        </section>

        <!-- Prerequisites Section -->
        <PrerequisitesSection prerequisites={prerequisites} className="mt-8" client:load />

        <!-- Secciones Section -->
        <SectionsCollapsible
            client:load
            className="mt-8"
            courseSigle={course.sigle}
        />

        <!-- Links de Interés -->
        <section class="mt-8">
            <div class="border border-border rounded-md p-6">
                <h2 class="text-2xl font-semibold mb-6">Links de Interés</h2>
                <div class="grid grid-cols-1 tablet:grid-cols-2 gap-4">
                    <Button
                        variant="outline"
                        href={`https://buscacursos.uc.cl/?cxml_semestre=${CURRENT_SEMESTER}&cxml_sigla=${course.sigle}&cxml_nrc=&cxml_nombre=&cxml_categoria=TODOS&cxml_area_fg=TODOS&cxml_formato_cur=TODOS&cxml_profesor=&cxml_campus=TODOS&cxml_unidad_academica=TODOS&cxml_horario_tipo_busqueda=si_tenga&cxml_horario_tipo_busqueda_actividad=TODOS&cxml_periodo=TODOS&cxml_escuela=TODOS&cxml_nivel=TODOS#resultados`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="w-full"
                        icon={LinkIcon}
                        aria-label="Ver Secciones del Curso en Busca Cursos"
                    >
                        Ver en Busca Cursos
                    </Button>

                    <Button
                        variant="outline"
                        href={`https://catalogo.uc.cl/index.php?tmpl=component&option=com_catalogo&view=programa&sigla=${course.sigle}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="w-full"
                        icon={LinkIcon}
                        aria-label="Ver Programa del Curso en Catálogo UC"
                    >
                        Ver Programa
                    </Button>
                </div>
            </div>
        </section>

        <!-- Sección de Reseñas -->
        <section class="mt-8">
            <div class="border border-border rounded-md overflow-hidden">
                <div class="border-b border-border px-6 py-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <h2 class="text-2xl font-semibold text-foreground">
                                Reseñas de Estudiantes
                            </h2>
                            <p class="text-sm text-muted-foreground mt-1">
                                Conoce las experiencias de otros estudiantes con este curso.
                            </p>
                        </div>
                        <div class="flex items-center gap-4">
                            {reviews && reviews.length > 0 && (
                                <div class="hidden md:flex items-center gap-2 text-sm px-3 py-2 rounded-lg border">
                                    <span class="font-medium text-muted-foreground">
                                        {reviews.length}
                                    </span>
                                    <span class="text-muted-foreground">
                                        reseñas mostradas
                                    </span>
                                </div>
                                <Button
                                variant="default"
                                href={`/${sigle}/review`}
                                icon={hasExistingReview ? EditIcon : PlusIcon}
                                size="sm"
                                aria-label={hasExistingReview ? "Editar reseña" : "Dejar una reseña"}
                            >
                                {hasExistingReview ? "Editar Reseña" : "Dejar una Reseña"}
                            </Button>
                            )}
                        </div>
                    </div>
                </div>

                {reviews && reviews.length > 0 ? (
                    <div class="p-6">
                        <div class="space-y-6">
                            {reviews.map((review, index) => (
                                <div class="relative bg-background border border-border flex flex-col gap-4 rounded-sm p-5">
                                    {/* Número de reviews */}
                                    <div class="absolute top-3 right-3 w-6 h-6 bg-muted text-muted-foreground rounded-full flex items-center justify-center text-xs font-medium opacity-50">
                                        {index + 1}
                                    </div>

                                    {/* Header con sentiment y metadata */}
                                    <div class="items-start justify-between pr-8 gap-2">
                                        <div class="flex items-center gap-2">
                                            <div class={`flex gap-2 items-center p-2 border rounded-lg ${
                                                review.like_dislike === 2
                                                    ? "bg-green-light text-green border-green/20"
                                                    : review.like_dislike === 1
                                                    ? "bg-blue-light text-blue border-blue/20" 
                                                    : "bg-red-light text-red border-red/20"
                                            }`}>
                                                {review.like_dislike === 2 ? (
                                                    <StarIcon className="h-5 w-5 fill-current" />
                                                ) : review.like_dislike === 1 ? (
                                                    <ThumbUpIcon className="h-5 w-5 fill-current" />
                                                ) : (
                                                    <ThumbDownIcon className="h-5 w-5 fill-current" />
                                                )}
                                                <span class="text-sm font-semibold">
                                                    {review.like_dislike === 2
                                                        ? "Lo super recomiendo"
                                                        : review.like_dislike ===
                                                            1
                                                          ? "Lo recomiendo"
                                                          : "No lo recomiendo"}
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    {/* Comentario */}
                                    {review.comment_path && (
                                        <div class="content-markdown">
                                            <MarkdownReviewView
                                                path={review.comment_path}
                                                client:load
                                            />
                                        </div>
                                    )}

                                    {/* Tags informativos */}
                                    <div class="flex items-center justify-between gap-4">
                                        <div class="flex flex-wrap gap-2">
                                            <Pill
                                                variant="ghost_green"
                                                size="sm"
                                                icon={CalendarIcon}
                                            >
                                                {review.year_taken} -{" "}
                                                {review.semester_taken === 1
                                                    ? "1er"
                                                    : "2do"}{" "}
                                                sem
                                            </Pill>
                                            <Pill
                                                variant="ghost_blue"
                                                size="sm"
                                                icon={WorkloadIcon}
                                            >
                                                {review.workload_vote === 0
                                                    ? "Dificultad Baja"
                                                    : review.workload_vote === 1
                                                    ? "Dificultad Normal"
                                                    : "Dificultad Alta"}
                                            </Pill>
                                            <Pill
                                                variant="ghost_purple"
                                                size="sm"
                                                icon={AttendanceIcon}
                                            >
                                                {review.attendance_type === 0
                                                    ? "Asistencia Obligatoria"
                                                    : review.attendance_type ===
                                                        1
                                                    ? "Asistencia Opcional"
                                                    : "Sin Asistencia"}
                                            </Pill>
                                            {review.weekly_hours && (
                                                <Pill
                                                    variant="ghost_orange"
                                                    size="sm"
                                                    icon={ClockIcon}
                                                >
                                                    {formatWeeklyHours(
                                                        review.weekly_hours,
                                                    )}
                                                    /sem
                                                </Pill>
                                            )}
                                        </div>
                                        <form action={actions.reportCourseReview} method="post">
                                            <input
                                                type="hidden"
                                                name="review_id"
                                                value={review.id}
                                            />
                                            <Button
                                                type="submit"
                                                variant="ghost"
                                                size="sm"
                                                icon={FlagIcon}
                                                className="text-muted-foreground hover:text-red-600 hover:bg-red-50"
                                                aria-label="Reportar reseña"
                                            >
                                                Reportar
                                            </Button>
                                        </form>
                                    </div>

                                </div>
                            ))}
                        </div>
                    </div>
                ) : (
                    <div class="p-6 text-center">
                        <div class="py-12">
                            <div class="mb-4">
                                <div class="w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto mb-4">
                                    <PlusIcon className="h-8 w-8 text-muted-foreground" />
                                </div>
                            </div>
                            <p class="text-lg font-medium text-muted-foreground mb-2">
                                Este curso aún no tiene reseñas
                            </p>
                            <p class="text-sm text-muted-foreground mb-6">
                                Comparte tu experiencia y ayuda a otros estudiantes
                            </p>
                            <Button
                                variant="default"
                                href={`/${sigle}/review`}
                                icon={PlusIcon}
                                aria-label="Ser el primero en dejar una reseña"
                            >
                                Ser el Primero en Reseñar
                            </Button>
                        </div>
                    </div>
                )}
            </div>
        </section>
    </div>
    <ReportToast result={reportResult} client:load />
</Layout>
