---
import Layout from "@/layouts/Layout.astro";
import {
    getCourseReviewByUserIdAndSigle,
    getCourseBySigle,
} from "@/services/courses";
import { actions, isInputError } from "astro:actions";
import { getUserDataByToken } from "@/services/auth";
import RedirectLogin from "@/components/reviews/RedirectLogin";
import { getEntry } from "astro:content";
import {
    CalendarIcon,
    WorkloadIcon,
    AttendanceIcon,
    ClockIcon,
    EditIcon,
    PlusIcon,
    HourglassIcon,
    HappyIcon,
    ThumbDownIcon,
    ThumbUpIcon,
    StarIcon,
} from "@/components/icons/icons";
import { Pill } from "@/components/ui/pill";
import { Button } from "@/components/ui/button";
import { ButtonInput } from "@/components/ui/button-input";
import { NumericInput } from "@/components/ui/numeric-input";
import { SelectInput } from "@/components/ui/select-input";

const result = Astro.getActionResult(actions.createCourseReview);

const { sigle } = Astro.params;

if (!sigle) {
    return Astro.redirect("/404");
}

// Get course data for header section
const courseData = await getEntry("coursesStatic", sigle);
if (!courseData) {
    return Astro.redirect("/404");
}
const course = courseData.data;

// Get additional course data for pills
const c = await getCourseBySigle(Astro.locals, sigle);

// Import ID to name mapping for schools and areas
import Id2NameRaw from "../../../migration/json/valores_unicos.json";
import { getToken } from "@/lib/auth";
const id2NameData = Id2NameRaw as Record<string, string>;

const token = getToken(Astro.cookies);
const user = await getUserDataByToken(token);

const userIsNull = !user;

const defaultData = await getCourseReviewByUserIdAndSigle(
    Astro.locals,
    sigle,
    user?.id ?? "-1",
);
let text = "";

if (defaultData.comment_path) {
    const res = await Astro.locals.runtime.env.R2.get(defaultData.comment_path);
    if (res) {
        text = await res.text();
    }
}

const inputErrors = isInputError(result?.error) ? result.error.fields : {};
const currentYear = new Date().getFullYear();
const isEditMode = defaultData && defaultData.id !== null;
---

<Layout>
    <div class="max-w-6xl mx-auto px-4 py-8">
        <!-- Information Section -->
        <div class="border border-border rounded-md p-6">
            <h3
                class="font-medium text-foreground mb-3 flex items-center gap-2"
            >
                <div
                    class="p-2 bg-blue-light text-blue font-medium border border-blue/20 rounded-lg"
                >
                    <EditIcon className="h-4 w-4 fill-current" />
                </div>
                Consejos para una buena reseña
            </h3>
            <div
                class="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm text-muted-foreground"
            >
                <ul class="space-y-2">
                    <li class="flex items-start gap-2">
                        <div
                            class="w-1 h-1 bg-muted-foreground rounded-full mt-2 flex-shrink-0"
                        >
                        </div>
                        <span>Sé respetuoso con el equipo docente</span>
                    </li>
                    <li class="flex items-start gap-2">
                        <div
                            class="w-1 h-1 bg-muted-foreground rounded-full mt-2 flex-shrink-0"
                        >
                        </div>
                        <span
                            >Incluye información útil para futuros estudiantes
                            del curso</span
                        >
                    </li>
                </ul>
                <ul class="space-y-2">
                    <li class="flex items-start gap-2">
                        <div
                            class="w-1 h-1 bg-muted-foreground rounded-full mt-2 flex-shrink-0"
                        >
                        </div>
                        <span>Sé constructivo en tu reseña</span>
                    </li>
                    <li class="flex items-start gap-2">
                        <div
                            class="w-1 h-1 bg-muted-foreground rounded-full mt-2 flex-shrink-0"
                        >
                        </div>
                        <span
                            >Considera incluir ejemplos concretos de tu
                            experiencia</span
                        >
                    </li>
                </ul>
            </div>
        </div>

        <!-- Review Form Header -->
        <section class="border border-border rounded-md overflow-hidden mt-8">
            <div class="border-b border-border px-6 py-6">
                <div class="flex items-center justify-between">
                    <div>
                        <h2 class="text-2xl font-semibold text-foreground">
                            {
                                isEditMode
                                    ? "Editar tu Reseña"
                                    : "Crear Reseña de Curso"
                            }
                        </h2>
                        <p class="text-sm text-muted-foreground mt-1">
                            Comparte tu experiencia con otros estudiantes
                        </p>
                    </div>
                    <div class="flex items-center gap-4">
                        <div
                            class="hidden md:flex items-center gap-2 text-sm px-3 py-2 rounded-lg border border-border"
                        >
                            <span class="font-medium text-muted-foreground">
                                {isEditMode ? "Modo Edición" : "Nueva Reseña"}
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Success Message -->
            {
                result && result.data?.message && (
                    <div class="px-6 py-4 bg-green-50 border-b border-green-200">
                        <div class="flex items-center gap-2">
                            <div class="w-2 h-2 bg-green-500 rounded-full" />
                            <p class="font-medium text-green-800">
                                {result.data.message}
                            </p>
                        </div>
                        {result.data.wasUpdated && (
                            <p class="text-sm mt-1 text-green-700 ml-4">
                                Tu reseña anterior ha sido sobrescrita.
                            </p>
                        )}
                    </div>
                )
            }

            <!-- Review Form -->
            <div class="p-6">
                <form
                    method="POST"
                    action={actions.createCourseReview}
                    class="space-y-8"
                >
                    <!-- Hidden course sigle -->
                    <input type="hidden" name="course_sigle" value={sigle} />

                    <!-- Rating Section -->
                    <div class="border border-border rounded-md p-6">
                        <h3
                            class="text-lg font-semibold mb-4 flex items-center gap-2"
                        >
                            <div
                                class="p-2 bg-green-light text-green border border-green/20 rounded-lg"
                            >
                                <HappyIcon className="h-5 w-5 fill-current" />
                            </div>
                            Valoración General
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <ButtonInput
                                variant="red"
                                icon={ThumbDownIcon}
                                title="No lo recomiendo"
                                subtitle="El curso no cumplió expectativas"
                                inputProps={{
                                    type: "radio",
                                    name: "like_dislike",
                                    value: "0",
                                    checked: defaultData.like_dislike === 0,
                                    required: true,
                                }}
                            />

                            <ButtonInput
                                variant="blue"
                                icon={ThumbUpIcon}
                                title="Lo recomiendo"
                                subtitle="El curso cumplió mis expectativas"
                                inputProps={{
                                    type: "radio",
                                    name: "like_dislike",
                                    value: "1",
                                    checked: defaultData.like_dislike === 1,
                                    required: true,
                                }}
                            />

                            <ButtonInput
                                variant="green"
                                icon={StarIcon}
                                title="Lo super recomiendo"
                                subtitle="El curso excedió mis expectativas"
                                inputProps={{
                                    type: "radio",
                                    name: "like_dislike",
                                    value: "2",
                                    checked: defaultData.like_dislike === 2,
                                    required: true,
                                }}
                            />
                        </div>
                        {
                            inputErrors.like_dislike && (
                                <p class="text-destructive text-sm mt-3">
                                    {inputErrors.like_dislike}
                                </p>
                            )
                        }
                    </div>

                    <!-- Course Details Grid -->
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <!-- Workload Section -->
                        <div class="border border-border rounded-md p-6">
                            <h3
                                class="text-lg font-semibold mb-4 flex items-center gap-2"
                            >
                                <div
                                    class="p-2 bg-blue-light text-blue border border-blue/20 rounded-lg"
                                >
                                    <WorkloadIcon
                                        className="h-5 w-5 fill-current"
                                    />
                                </div>
                                Dificultad de Trabajo
                            </h3>
                            <div class="space-y-3">
                                <ButtonInput
                                    variant="green"
                                    size="sm"
                                    icon={HourglassIcon}
                                    title="Baja"
                                    subtitle="Pocas horas de estudio"
                                    inputProps={{
                                        type: "radio",
                                        name: "workload_vote",
                                        value: "0",
                                        checked:
                                            defaultData.workload_vote === 0,
                                        required: true,
                                    }}
                                />

                                <ButtonInput
                                    variant="orange"
                                    size="sm"
                                    icon={HourglassIcon}
                                    title="Media"
                                    subtitle="Carga de trabajo estándar"
                                    inputProps={{
                                        type: "radio",
                                        name: "workload_vote",
                                        value: "1",
                                        checked:
                                            defaultData.workload_vote === 1,
                                        required: true,
                                    }}
                                />

                                <ButtonInput
                                    variant="red"
                                    size="sm"
                                    icon={HourglassIcon}
                                    title="Alta"
                                    subtitle="Muchas horas de estudio"
                                    inputProps={{
                                        type: "radio",
                                        name: "workload_vote",
                                        value: "2",
                                        checked:
                                            defaultData.workload_vote === 2,
                                        required: true,
                                    }}
                                />
                            </div>
                            {
                                inputErrors.workload_vote && (
                                    <p class="text-destructive text-sm mt-3">
                                        {inputErrors.workload_vote}
                                    </p>
                                )
                            }
                        </div>

                        <!-- Attendance Section -->
                        <div class="border border-border rounded-md p-6">
                            <h3
                                class="text-lg font-semibold mb-4 flex items-center gap-2"
                            >
                                <div
                                    class="p-2 bg-purple-light text-purple border border-purple/20 rounded-lg"
                                >
                                    <AttendanceIcon
                                        className="h-5 w-5 fill-current"
                                    />
                                </div>
                                Tipo de Asistencia
                            </h3>
                            <div class="space-y-3">
                                <ButtonInput
                                    variant="red"
                                    size="sm"
                                    icon={AttendanceIcon}
                                    title="Obligatoria"
                                    subtitle="Asistencia requerida"
                                    inputProps={{
                                        type: "radio",
                                        name: "attendance_type",
                                        value: "0",
                                        checked:
                                            defaultData.attendance_type === 0,
                                        required: true,
                                    }}
                                />

                                <ButtonInput
                                    variant="green"
                                    size="sm"
                                    icon={AttendanceIcon}
                                    title="Opcional"
                                    subtitle="Puedes faltar sin problemas"
                                    inputProps={{
                                        type: "radio",
                                        name: "attendance_type",
                                        value: "1",
                                        checked:
                                            defaultData.attendance_type === 1,
                                        required: true,
                                    }}
                                />
                            </div>
                            {
                                inputErrors.attendance_type && (
                                    <p class="text-destructive text-sm mt-3">
                                        {inputErrors.attendance_type}
                                    </p>
                                )
                            }
                        </div>
                    </div>

                    <!-- Numeric Fields Grid -->
                    <div class="border border-border rounded-md p-6">
                        <h3
                            class="text-lg font-semibold mb-6 flex items-center gap-2"
                        >
                            <div
                                class="p-2 bg-green-light text-green border border-green/20 rounded-lg"
                            >
                                <CalendarIcon
                                    className="h-5 w-5 fill-current"
                                />
                            </div>
                            Detalles del Curso
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <!-- Weekly Hours -->
                            <NumericInput
                                icon={ClockIcon}
                                label="Horas Semanales"
                                description="Tiempo dedicado semanalmente al curso"
                                placeholder="8"
                                name="weekly_hours"
                                required={true}
                                min={0}
                                max={168}
                                value={defaultData.weekly_hours || ""}
                                error={inputErrors.weekly_hours}
                            />

                            <!-- Year -->
                            <NumericInput
                                icon={CalendarIcon}
                                label="Año Cursado"
                                description="Año en que cursaste la materia"
                                placeholder={currentYear.toString()}
                                name="year_taken"
                                required={true}
                                min={2000}
                                max={currentYear}
                                value={defaultData.year_taken || ""}
                                error={inputErrors.year_taken}
                            />

                            <!-- Semester -->
                            <SelectInput
                                icon={CalendarIcon}
                                label="Semestre"
                                description="Período académico cursado"
                                error={inputErrors.semester_taken}
                                selectProps={{
                                    id: "semester_taken",
                                    name: "semester_taken",
                                    required: true,
                                }}
                                transition:persist
                            >
                                <option value="">Seleccionar semestre</option>
                                <option
                                    value="1"
                                    selected={defaultData.semester_taken === 1}
                                    >1° Semestre</option
                                >
                                <option
                                    value="2"
                                    selected={defaultData.semester_taken === 2}
                                    >2° Semestre</option
                                >
                                <option
                                    value="3"
                                    selected={defaultData.semester_taken === 3}
                                    >TAV (Temporada Académica de Verano)</option
                                >
                            </SelectInput>
                        </div>
                    </div>

                    <!-- Comment Section -->
                    <div class="border border-border rounded-md p-6">
                        <h3
                            class="text-lg font-semibold mb-4 flex items-center gap-2"
                        >
                            <div
                                class="p-2 bg-purple-light text-purple border border-purple/20 rounded-lg"
                            >
                                <EditIcon className="h-5 w-5 fill-current" />
                            </div>
                            Comentario (Opcional)
                        </h3>
                        <p class="text-sm text-muted-foreground mb-4">
                            Comparte tu experiencia, consejos para futuros
                            estudiantes, o cualquier información útil.
                        </p>
                        <textarea
                            id="comment"
                            name="comment"
                            rows="6"
                            maxlength="10000"
                            placeholder="Escribe tu comentario aquí... Puedes incluir información sobre la metodología, evaluaciones, consejos para el curso, etc."
                            class="w-full rounded-md border border-border px-3 py-2 shadow-sm focus:border-primary focus:ring focus:ring-primary/20 focus:ring-opacity-50 resize-vertical text-sm resize-none min-h-20 transition-colors"
                            transition:persist>{text || ""}</textarea
                        >
                        <div class="flex justify-between mt-2">
                            <div>
                                {
                                    inputErrors.comment && (
                                        <p class="text-destructive text-sm">
                                            {inputErrors.comment}
                                        </p>
                                    )
                                }
                            </div>
                            <p class="text-xs text-muted-foreground">
                                Máximo 1,000 caracteres
                            </p>
                        </div>
                    </div>

                    <!-- General Error -->
                    {
                        !isInputError(result?.error) &&
                            result?.error?.message && (
                                <div class="border border-destructive/20 rounded-md p-4 bg-destructive/5">
                                    <div class="flex items-center gap-2">
                                        <div class="p-1 bg-destructive/10 rounded-full">
                                            <div class="w-2 h-2 bg-destructive rounded-full" />
                                        </div>
                                        <p class="font-medium text-destructive">
                                            {result.error.message}
                                        </p>
                                    </div>
                                </div>
                            )
                    }

                    <!-- Action Buttons -->
                    <div
                        class="flex justify-between items-center pt-6 border-t border-border"
                    >
                        <Button
                            variant="ghost"
                            href={`/${sigle}/`}
                            className="text-muted-foreground hover:text-foreground"
                        >
                            ← Volver al curso
                        </Button>

                        <div class="flex items-center gap-3">
                            <Button
                                type="submit"
                                variant="default"
                                icon={isEditMode ? EditIcon : PlusIcon}
                            >
                                {
                                    isEditMode
                                        ? "Actualizar Reseña"
                                        : "Guardar Reseña"
                                }
                            </Button>

                            {
                                defaultData.id && (
                                    <Button
                                        variant="destructive"
                                        href={`/${sigle}/delete/${defaultData.id}`}
                                        size="sm"
                                    >
                                        Borrar Reseña
                                    </Button>
                                )
                            }
                        </div>
                    </div>
                </form>
            </div>
        </section>
    </div>
    <RedirectLogin userIsNull={userIsNull} client:only="react" />
</Layout>
