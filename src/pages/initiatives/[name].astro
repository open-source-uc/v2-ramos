---
import { getCollection } from "astro:content";
import BlogCard from "@/components/BlogCard.astro";
import Layout from "@/layouts/Layout.astro";
import RenderMarkdown from "@/components/RenderMarkdown.astro";
export const prerender = true;

export async function getStaticPaths() {
  const initiatives = await getCollection("initiatives");
  return initiatives.map((initiative) => ({
    params: {
      name: initiative.data.name.toLowerCase().replace(/\s+/g, "-"),
    },
    props: { initiative },
  }));
}

const blogs = await getCollection("blogs", (blog) => {
  return blog.data.author.name === Astro.props.initiative.data.name;
});

const { initiative } = Astro.props;
const { title, name, picture, faculty, rrss } = initiative.data;
const { Content } = await initiative.render();
---

<Layout>
  <main class="grid lg:grid-cols-2 gap-4 p-4">
    <article class="flex flex-col">
      <header class="flex items-center">
        <div class="flex flex-col items-start">
          <h1 class="font-semibold text-2xl">{name}</h1>
          <p class="text-gray-500 text-sm">{faculty}</p>
        </div>
        <div>
          <img src={picture} alt={name} class="w-20 h-auto" />
        </div>
      </header>
      <RenderMarkdown border={false}>
        <Content />
      </RenderMarkdown>
    </article>
    <aside class="mt-20 px-4">
      <h2 class="font-semibold text-xl">Blogs:</h2>
      {
        blogs.map((blog) => (
          <div class="py-2 flex justify-center">
            <BlogCard
              title={blog.data.title}
              authorName={blog.data.author.name || "Desconocido"}
              description={blog.data.description}
              readtime={blog.data.readtime}
              tags={blog.data.tags || []}
            />
          </div>
        ))
      }
    </aside>
  </main>
</Layout>
