---
import Layout from "@/layouts/Layout.astro";
import { getPendingReviews } from "@/services/admin.reviews";
import { MarkdownReviewView } from "@/components/reviews/MarkdownReviewView";
import { getToken } from "@/lib/auth";
import { actions, isInputError } from "astro:actions";

const token = getToken(Astro.cookies);
const reportedReviews = await getPendingReviews(Astro.locals, token);

const result = Astro.getActionResult(actions.updateReviewStatus);
const successMessage = result?.data?.message;
---

<Layout>
    <h1>Report Reviews</h1>
    {
        successMessage && (
            <div class="mb-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded-md">
                <p class="font-medium">{successMessage}</p>
            </div>
        )
    }
    {
        !isInputError(result?.error) && result?.error?.message && (
            <div class="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded-md">
                <p class="font-medium">{result.error.message}</p>
            </div>
        )
    }
    <ul>
        {
            reportedReviews.map((review) => (
                <li id={review.id + "-reported"}>
                    <h1>{review.comment_path}</h1>
                    <MarkdownReviewView
                        path={review.comment_path}
                        client:only="react"
                    />
                    <form
                        method="post"
                        action={actions.updateReviewStatus}
                        class="flex flex-col border-2 border-black"
                    >
                        <input
                            type="hidden"
                            name="review_id"
                            value={review.id}
                        />
                        <div class="flex-1 min-w-0">
                            <select
                                name="status"
                                required
                                class="w-full sm:w-auto min-w-[200px] border border-gray-300 rounded-md px-3 py-2 bg-white text-gray-900 text-sm focus:ring-2 focus:ring-amber-500 focus:border-amber-500"
                            >
                                <option value="" disabled selected>
                                    Seleccionar estado
                                </option>
                                <option value="1">Aprobar</option>
                                <option value="3">Ocultar</option>
                            </select>
                        </div>
                        <button
                            type="submit"
                            class="bg-amber-500 hover:bg-amber-600 text-white font-medium px-6 py-2 rounded-md transition-colors w-42"
                        >
                            Guardar
                        </button>{" "}
                    </form>
                </li>
            ))
        }
    </ul>
</Layout>
